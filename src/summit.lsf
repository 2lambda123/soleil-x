#!/bin/bash -eu
#BSUB -J soleil
#BSUB -P CSC275IACCARINO
#BSUB -alloc_flags smt4

# Create a scratch directory on the AlpineTDS filesystem, for I/O.
SCRATCH_DIR=/gpfs/alpinetds/proj-shared/csc275/stanford/"$LSB_JOBID"
mkdir "$SCRATCH_DIR"

# Copy input files to the scratch directory.
cp -r "$SOLEIL_DIR"/src/LMquads "$SCRATCH_DIR"
_ARGS=
JSON_FOLLOWS=false
CSV_FOLLOWS=false
NUM_SAMPLES=0
for ARG in $ARGS; do
    if [[ "$JSON_FOLLOWS" == true ]]; then
        JSON_FOLLOWS=false
        ORIG="$ARG"
        COPY="$SCRATCH_DIR/sample$NUM_SAMPLES.json"
        NUM_SAMPLES=$(( NUM_SAMPLES + 1 ))
        cp "$ORIG" "$COPY"
        _ARGS="$_ARGS -i $COPY"
    elif [[ "$CSV_FOLLOWS" == true ]]; then
        CSV_FOLLOWS=false
        while IFS='' read -r ORIG || [[ -n "$ORIG" ]]; do
            COPY="$SCRATCH_DIR/sample$NUM_SAMPLES.json"
            NUM_SAMPLES=$(( NUM_SAMPLES + 1 ))
            cp "$ORIG" "$COPY"
            _ARGS="$_ARGS -i $COPY"
        done < "$ARG"
    elif [[ "$ARG" == "-i" ]]; then
        JSON_FOLLOWS=true
    elif [[ "$ARG" == "-I" ]]; then
        CSV_FOLLOWS=true
    else
        _ARGS="$_ARGS $ARG"
    fi
done

# Process CUDA configuration
GPU_OPTS=
if [[ "$USE_CUDA" == 1 ]]; then
    GPU_OPTS="-ll:gpu 3 -ll:fsize 1024 -ll:zsize 0"
fi

# Start the job inside the scratch directory.
cd "$SCRATCH_DIR"
# NOTE: We have to run through the pick_hcas.py script, due to a GASNet bug.
# NOTE: We have to disable MPI's CUDA hijack; it interferes with Realm's.
jsrun -n "$NUM_RANKS" -r 2 -a 1 -c 21 -g 3 -b rs -E LD_LIBRARY_PATH \
    --smpiargs="-x PAMI_DISABLE_CUDA_HOOK=1 -disable_gpu_hooks" \
    "$SOLEIL_DIR"/src/pick_hcas.py \
    "$SOLEIL_DIR"/src/soleil.exec $_ARGS $GPU_OPTS \
    -ll:cpu 0 -ll:ocpu 1 -ll:onuma 0 -ll:okindhack -ll:othr 21 \
    -ll:csize 16384 -ll:rsize 1024 -ll:gsize 0 -ll:ib_zsize 0

# Resources:
# 2 NUMA domains per node
# 21 cores per NUMA domain
# 4-way SMT per core
# 256GB RAM per NUMA domain
# 3 Volta V100 GPUs per NUMA domain
# 16GB FB per GPU
